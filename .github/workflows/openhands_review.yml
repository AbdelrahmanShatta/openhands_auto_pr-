name: OpenHands Code Quality Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-quality-review:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      packages: read
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker
        uses: docker/setup-docker-action@v3
        with:
          docker-buildx-version: latest

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install code quality tools
        run: |
          python -m pip install --upgrade pip
          pip install black mypy ruff

      - name: Run code quality checks
        id: quality_checks
        continue-on-error: true
        run: |
          {
            echo "### Code Quality Analysis Results" > quality_report.md
            
            # Black check
            echo "#### Black (Code Formatting)" >> quality_report.md
            echo '```' >> quality_report.md
            black --check --diff . >> quality_report.md 2>&1 || true
            [ $? -eq 0 ] && echo "BLACK_PASSED=true" >> $GITHUB_ENV || echo "BLACK_PASSED=false" >> $GITHUB_ENV
            
            # Ruff check
            echo "#### Ruff (Linting)" >> quality_report.md
            echo '```' >> quality_report.md
            ruff check . >> quality_report.md 2>&1 || true
            [ $? -eq 0 ] && echo "RUFF_PASSED=true" >> $GITHUB_ENV || echo "RUFF_PASSED=false" >> $GITHUB_ENV
            
            # MyPy check
            echo "#### MyPy (Type Checking)" >> quality_report.md
            echo '```' >> quality_report.md
            mypy . --ignore-missing-imports >> quality_report.md 2>&1 || true
            [ $? -eq 0 ] && echo "MYPY_PASSED=true" >> $GITHUB_ENV || echo "MYPY_PASSED=false" >> $GITHUB_ENV
          }

      - name: Run OpenHands Review
        id: openhands_review
        if: env.BLACK_PASSED == 'true' && env.RUFF_PASSED == 'true' && env.MYPY_PASSED == 'true'
        env:
          WORKSPACE_BASE: ${{ github.workspace }}
          LLM_MODEL: "anthropic/claude-3-5-sonnet-20241022"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create state directory with proper permissions
          mkdir -p ${GITHUB_WORKSPACE}/.openhands-state
          chmod -R 777 ${GITHUB_WORKSPACE}/.openhands-state

          # Get PR details via GitHub API
          PR_FILES=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files")

          TASK_INSTRUCTION="Review PR #${{ github.event.pull_request.number }} in ${{ github.repository }} according to .openhands_instructions. Output only GOOD or BAD. PR changes: $PR_FILES"

          docker run --rm \
            --user root \
            -e SANDBOX_RUNTIME_CONTAINER_IMAGE=docker.all-hands.dev/all-hands-ai/runtime:0.24-nikolaik \
            -e SANDBOX_USER_ID=$(id -u) \
            -e WORKSPACE_MOUNT_PATH=$WORKSPACE_BASE \
            -e LLM_API_KEY=${{ secrets.LLM_API_KEY }} \
            -e LLM_MODEL=$LLM_MODEL \
            -e LOG_ALL_EVENTS=true \
            -v $WORKSPACE_BASE:/opt/workspace_base \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${GITHUB_WORKSPACE}/.openhands-state:/.openhands-state \
            --add-host host.docker.internal:host-gateway \
            docker.all-hands.dev/all-hands-ai/openhands:0.24 \
            python -m openhands.core.main \
            -t "$TASK_INSTRUCTION" \
            --eval-output-dir ./eval_output \
            --no-auto-continue \
            -i 50 \
            -b 50 \
            --eval-n-limit 50 > openhands_output.log

          if grep -q "GOOD" openhands_output.log; then
            echo "OPENHANDS_PASSED=true" >> $GITHUB_ENV
          else
            echo "OPENHANDS_PASSED=false" >> $GITHUB_ENV
          fi

      - name: Process review results
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          QUALITY_REPORT=$(cat quality_report.md)
          OPENHANDS_LOG=$(cat openhands_output.log || echo "No OpenHands log")

          if [ "$BLACK_PASSED" != "true" ] || [ "$RUFF_PASSED" != "true" ] || [ "$MYPY_PASSED" != "true" ]; then
            gh pr comment "${{ github.event.pull_request.number }}" --body "❌ **Code Quality Review Failed**

            Automated checks failed. Fix these first:
            $QUALITY_REPORT
            OpenHands Log: \`\`\`
            $OPENHANDS_LOG
            \`\`\`"
            gh pr review "${{ github.event.pull_request.number }}" --request-changes
            exit 1
          elif [ "$OPENHANDS_PASSED" = "true" ]; then
            gh pr comment "${{ github.event.pull_request.number }}" --body "✅ **All Checks Passed**
            $QUALITY_REPORT"
            gh pr review "${{ github.event.pull_request.number }}" --approve
            gh pr merge --auto --merge
          else
            gh pr comment "${{ github.event.pull_request.number }}" --body "❌ **OpenHands Review Failed**
            
            $QUALITY_REPORT
            OpenHands Findings: \`\`\`
            $OPENHANDS_LOG
            \`\`\`"
            gh pr review "${{ github.event.pull_request.number }}" --request-changes
          fi
