name: OpenHands Code Quality Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-quality-review:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      packages: read
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker
        uses: docker/setup-docker-action@v3
        with:
          docker-buildx-version: latest

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install code quality tools
        run: |
          python -m pip install --upgrade pip
          pip install openhands-ai pylint black mypy ruff

      - name: Run code quality checks
        id: quality_checks
        continue-on-error: true
        run: |
          # Run various code quality tools and store their output
          {
            echo "### Code Quality Analysis Results" > quality_report.md
            echo "" >> quality_report.md
            
            # Run Black for code formatting
            echo "#### Black (Code Formatting)" >> quality_report.md
            echo '```' >> quality_report.md
            if black --check --diff .; then
              echo "✅ Code formatting is consistent with Black standards" >> quality_report.md
              echo "BLACK_PASSED=true" >> $GITHUB_ENV
            else
              echo "❌ Code formatting issues found" >> quality_report.md
              black --check --diff . >> quality_report.md 2>&1
              echo "BLACK_PASSED=false" >> $GITHUB_ENV
            fi
            echo '```' >> quality_report.md
            echo "" >> quality_report.md
            
            # Run Ruff for fast Python linting
            echo "#### Ruff (Fast Python Linter)" >> quality_report.md
            echo '```' >> quality_report.md
            if ruff check .; then
              echo "✅ No issues found by Ruff" >> quality_report.md
              echo "RUFF_PASSED=true" >> $GITHUB_ENV
            else
              echo "❌ Ruff found code quality issues" >> quality_report.md
              ruff check . >> quality_report.md 2>&1
              echo "RUFF_PASSED=false" >> $GITHUB_ENV
            fi
            echo '```' >> quality_report.md
            echo "" >> quality_report.md
            
            # Run MyPy for type checking
            echo "#### MyPy (Type Checking)" >> quality_report.md
            echo '```' >> quality_report.md
            if mypy . --ignore-missing-imports; then
              echo "✅ Type checking passed" >> quality_report.md
              echo "MYPY_PASSED=true" >> $GITHUB_ENV
            else
              echo "❌ Type checking issues found" >> quality_report.md
              mypy . --ignore-missing-imports >> quality_report.md 2>&1
              echo "MYPY_PASSED=false" >> $GITHUB_ENV
            fi
            echo '```' >> quality_report.md
          } 


- name: Process review results
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Read the quality report
          QUALITY_REPORT=$(cat quality_report.md)
          
          # Check if all automated checks passed
          CHECKS_PASSED="true"
          if [ "$BLACK_PASSED" != "true" ] || [ "$RUFF_PASSED" != "true" ] || [ "$MYPY_PASSED" != "true" ]; then
            CHECKS_PASSED="false"
          fi
          
          # If automated checks failed, don't consider OpenHands result
          if [ "$CHECKS_PASSED" = "false" ]; then
            gh pr comment "${{ github.event.pull_request.number }}" --body "❌ **Code Quality Review Failed**

            Automated quality checks did not pass. Please review the report below and make necessary changes.

            $QUALITY_REPORT"
            
            gh pr review "${{ github.event.pull_request.number }}" --request-changes -b "Code quality standards not met. See the detailed report in the PR comments."
            exit 0
          fi
          
          # If we get here, all automated checks passed, now check OpenHands result
          # Get the last line of output and check if it's GOOD or BAD
          OPENHANDS_RESULT=$(cat openhands_output.txt | tail -n1 | grep -E '^(GOOD|BAD)$' || echo "BAD")
          echo "Final OpenHands result: $OPENHANDS_RESULT"
          
          if [ "$OPENHANDS_RESULT" = "GOOD" ]; then
            gh pr comment "${{ github.event.pull_request.number }}" --body "✅ **Code Quality Review Passed**

            All automated checks and OpenHands review passed. Auto-merging PR.

            $QUALITY_REPORT

            OpenHands Review Output:
            \`\`\`
            $(cat openhands_output.txt || echo "No output available")
            \`\`\`"
            
            gh pr review "${{ github.event.pull_request.number }}" --approve -b "All code quality standards met."
            
            # Enable auto-merge
            gh pr merge "${{ github.event.pull_request.number }}" --auto --merge
            gh pr merge "${{ github.event.pull_request.number }}" --merge
          else
            gh pr comment "${{ github.event.pull_request.number }}" --body "❌ **Code Quality Review Failed**

            While automated checks passed, OpenHands AI review found quality issues. Please review your code for potential improvements.

            $QUALITY_REPORT

            OpenHands Review Output:
            \`\`\`
            $(cat openhands_output.txt || echo "No output available")
            \`\`\`"
            
            gh pr review "${{ github.event.pull_request.number }}" --request-changes -b "Code quality standards not met according to OpenHands AI review."
            exit 1
          fi
