name: OpenHands Code Quality Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-quality-review:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openhands-ai pylint black mypy ruff

      - name: Run code quality checks
        id: quality_checks
        continue-on-error: true
        run: |
          # Run various code quality tools and store their output
          {
            echo "### Code Quality Analysis Results" > quality_report.md
            echo "" >> quality_report.md

            # Run Black for code formatting
            echo "#### Black (Code Formatting)" >> quality_report.md
            echo '```
            if black --check --diff .; then
              echo "✅ Code formatting is consistent with Black standards" >> quality_report.md
              echo "BLACK_PASSED=true" >> $GITHUB_ENV
            else
              echo "❌ Code formatting issues found" >> quality_report.md
              black --check --diff . >> quality_report.md 2>&1
              echo "BLACK_PASSED=false" >> $GITHUB_ENV
            fi
            echo '```' >> quality_report.md
            echo "" >> quality_report.md

            # Run Ruff for fast Python linting
            echo "#### Ruff (Fast Python Linter)" >> quality_report.md
            echo '```
            if ruff check .; then
              echo "✅ No issues found by Ruff" >> quality_report.md
              echo "RUFF_PASSED=true" >> $GITHUB_ENV
            else
              echo "❌ Ruff found code quality issues" >> quality_report.md
              ruff check . >> quality_report.md 2>&1
              echo "RUFF_PASSED=false" >> $GITHUB_ENV
            fi
            echo '```' >> quality_report.md
            echo "" >> quality_report.md

            # Run MyPy for type checking
            echo "#### MyPy (Type Checking)" >> quality_report.md
            echo '```
            if mypy . --ignore-missing-imports; then
              echo "✅ Type checking passed" >> quality_report.md
              echo "MYPY_PASSED=true" >> $GITHUB_ENV
            else
              echo "❌ Type checking issues found" >> quality_report.md
              mypy . --ignore-missing-imports >> quality_report.md 2>&1
              echo "MYPY_PASSED=false" >> $GITHUB_ENV
            fi
            echo '```' >> quality_report.md
          } || true

      - name: Create OpenHands instructions
        run: |
          cat > .openhands_instructions << 'EOL'
          # OpenHands Code Quality Review Instructions

          **Role:** You are a senior code quality analyst responsible for evaluating pull requests.

          **Task:** Review the code changes and quality check results to determine if the PR meets our standards.

          **Code Quality Standards:**
          1. Code follows consistent naming conventions and style guidelines
          2. No code smells or anti-patterns are present
          3. Functions and classes are well-documented with clear purpose
          4. Code is DRY (Don't Repeat Yourself) and follows SOLID principles
          5. All automated quality checks (Black, Ruff, MyPy) must pass
          6. No security vulnerabilities or performance bottlenecks
          7. Tests are present for new functionality (if applicable)

          **Response Format:**
          - Output exactly "GOOD" if the code meets ALL standards
          - Output exactly "BAD" if ANY standard is not met
          DO NOT provide explanations or suggestions - only output GOOD or BAD
          EOL

      - name: Run OpenHands Review
        id: openhands_review
        if: env.BLACK_PASSED == 'true' && env.RUFF_PASSED == 'true' && env.MYPY_PASSED == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_MODEL: "claude-3-5-sonnet-20241022"
          LOG_ALL_EVENTS: "true"
        run: |
          # Construct the OpenHands command
          openhands_command="python -m openhands.core.main -t 'Review PR #${{ github.event.pull_request.number }} in ${{ github.repository }} according to .openhands_instructions. Output only GOOD or BAD.'"

          # Run OpenHands review and save output
          # Redirect stderr to stdout to capture everything
          review_output=$(timeout 300s eval $openhands_command 2>&1 || true)

          # Save the output for debugging
          echo "$review_output" > openhands_output.txt

          # Debug: Show the full output
          echo "Full OpenHands output:"
          echo "$review_output"
          echo "---"

          # Get the last line of output and check if it's GOOD or BAD
          result=$(echo "$review_output" | tail -n1 | grep -E '^(GOOD|BAD)$' || echo "BAD")
          echo "Extracted result: $result"

          echo "OpenHands result: $result"

          if [ "$result" = "GOOD" ]; then
            echo "OPENHANDS_PASSED=true" >> $GITHUB_ENV
          else
            echo "OPENHANDS_PASSED=false" >> $GITHUB_ENV
          fi

      - name: Process review results
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Read the quality report
          QUALITY_REPORT=$(cat quality_report.md)

          # Check if all automated checks passed
          CHECKS_PASSED="true"
          if [ "$BLACK_PASSED" != "true" ] || [ "$RUFF_PASSED" != "true" ] || [ "$MYPY_PASSED" != "true" ]; then
            CHECKS_PASSED="false"
          fi

          # If automated checks failed, don't consider OpenHands result
          if [ "$CHECKS_PASSED" = "false" ]; then
            gh pr comment "${{ github.event.pull_request.number }}" --body "❌ **Code Quality Review Failed**

            Automated quality checks did not pass. Please review the report below and make necessary changes.

            $QUALITY_REPORT"

            gh pr review "${{ github.event.pull_request.number }}" --request-changes -b "Code quality standards not met. See the detailed report in the PR comments."
            exit 0
          fi

          # If we get here, all automated checks passed, now check OpenHands result
          if [ "$OPENHANDS_PASSED" = "true" ]; then
            gh pr comment "${{ github.event.pull_request.number }}" --body "✅ **Code Quality Review Passed**

            All automated checks and OpenHands review passed. Auto-merging PR.

            $QUALITY_REPORT"

            gh pr review "${{ github.event.pull_request.number }}" --approve -b "All code quality standards met."

            # Enable auto-merge
            gh pr merge "${{ github.event.pull_request.number }}" --auto --merge
            gh pr merge "${{ github.event.pull_request.number }}" --merge
          else
            gh pr comment "${{ github.event.pull_request.number }}" --body "❌ **Code Quality Review Failed**

            While automated checks passed, OpenHands AI review found quality issues. Please review your code for potential improvements.

            $QUALITY_REPORT"

            gh pr review "${{ github.event.pull_request.number }}" --request-changes -b "Code quality standards not met according to OpenHands AI review."
          fi
